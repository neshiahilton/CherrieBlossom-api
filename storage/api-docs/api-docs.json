{
    "openapi": "3.0.0",
    "info": {
        "title": "My API Documentation",
        "description": "API documentation for my Laravel application",
        "version": "1.0.0"
    },
    "paths": {
        "/api/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register new user & get token",
                "operationId": "register",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "name": "Augusta Ada Byron",
                                "email": "ada.lovelace@gmail.com",
                                "password": "Ba88a935",
                                "password_confirmation": "Ba88a935"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log in to existing user & get token",
                "operationId": "login",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "example": {
                                "email": "ada.lovelace@gmail.com",
                                "password": "Ba88a935"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Log out & destroy self token",
                "operationId": "logout",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User Email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport_token_ready": [],
                        "passport": []
                    }
                ]
            }
        },
<<<<<<< HEAD
        "/api/bouquet": {
            "get": {
                "tags": [
                    "bouquet"
                ],
                "summary": "Display a listing of items",
                "operationId": "index",
=======
        "/api/book": {
            "get": {
                "tags": [
                    "book"
                ],
                "summary": "Display a listing of items",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "description": "current page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    },
                    {
                        "name": "_limit",
                        "in": "query",
                        "description": "max item in a page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 10
                        }
                    },
                    {
                        "name": "_search",
                        "in": "query",
                        "description": "word to search",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_publisher",
                        "in": "query",
                        "description": "search by publisher like name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_sort_by",
                        "in": "query",
                        "description": "word to search",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "latest"
                        }
                    }
                ],
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                "responses": {
                    "200": {
                        "description": "successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
<<<<<<< HEAD
            },
            "post": {
                "tags": [
                    "bouquet"
                ],
                "summary": "Store a newly created item",
                "operationId": "store",
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Bouquet"
                            },
                            "example": {
                                "title": "Eating Clean",
                                "author": "Inge Tumiwa-Bachrens",
                                "publisher": "Kawan Pustaka",
                                "publication_year": "2016",
                                "cover": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/bouquets/1482170055/33511107.jpg",
                                "description": "Menjadi sehat adalah impian semua orang. Makanan yang selama ini kita pikir sehat ternyata belum tentu 'sehat' bagi tubuh kita.",
                                "price": 85000
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/bouquet/{id}": {
            "get": {
                "tags": [
                    "bouquet"
=======
            }
        },
        "/api/book/{id}": {
            "get": {
                "tags": [
                    "book"
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                ],
                "summary": "Display the specified item",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be displayed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
<<<<<<< HEAD
                    "bouquet"
=======
                    "book"
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                ],
                "summary": "Update the specified item",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body description",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
<<<<<<< HEAD
                                "$ref": "#/components/schemas/Bouquet"
=======
                                "$ref": "#/components/schemas/Book"
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                            },
                            "example": {
                                "title": "Eating Clean",
                                "author": "Inge Tumiwa-Bachrens",
                                "publisher": "Kawan Pustaka",
                                "publication_year": "2016",
<<<<<<< HEAD
                                "cover": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/bouquets/1482170055/33511107.jpg",
=======
                                "cover": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1482170055/33511107.jpg",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                                "description": "Menjadi sehat adalah impian semua orang. Makanan yang selama ini kita pikir sehat ternyata belum tentu 'sehat' bagi tubuh kita.",
                                "price": 85000
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
<<<<<<< HEAD
                    "bouquet"
=======
                    "book"
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                ],
                "summary": "Remove the specified item",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of item that needs to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "204": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
<<<<<<< HEAD
            "Bouquet": {
                "title": "Bouquet model",
                "description": "Bouquet model",
=======
            "Book": {
                "title": "Book model",
                "description": "Book model",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                "required": [
                    "title",
                    "author"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
<<<<<<< HEAD
                        "description": "Title of the bouquet",
=======
                        "description": "Title of the book",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "type": "string",
                        "example": "Who Moved My Cheese?"
                    },
                    "author": {
                        "title": "Author",
<<<<<<< HEAD
                        "description": "Author of the bouquet",
=======
                        "description": "Author of the book",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "type": "string",
                        "example": "Spencer Johnson"
                    },
                    "publisher": {
                        "title": "Publisher",
<<<<<<< HEAD
                        "description": "Publisher of the bouquet",
=======
                        "description": "Publisher of the book",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "type": "string",
                        "example": "Putnam"
                    },
                    "publication_year": {
                        "title": "Publication Year",
<<<<<<< HEAD
                        "description": "Publication year of the bouquet",
=======
                        "description": "Publication year of the book",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "type": "string",
                        "example": "1998"
                    },
                    "cover": {
                        "title": "Cover",
<<<<<<< HEAD
                        "description": "Cover image URL of the bouquet",
                        "type": "string",
                        "example": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/bouquets/1388639171/4894.jpg"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the bouquet",
=======
                        "description": "Cover image URL of the book",
                        "type": "string",
                        "example": "https://images-na.ssl-images-amazon.com/images/S/compressed.photo.goodreads.com/books/1388639171/4894.jpg"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the book",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "type": "string",
                        "example": "A simple parable that reveals profound truths about change"
                    },
                    "price": {
                        "title": "Price",
<<<<<<< HEAD
                        "description": "Price of the bouquet",
=======
                        "description": "Price of the book",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "type": "integer",
                        "format": "int64",
                        "example": 45000
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
<<<<<<< HEAD
                    "name": "Bouquet"
=======
                    "name": "Book"
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                }
            },
            "User": {
                "title": "User model",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "title": "Email Verified At",
                        "description": "Email verified at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "passport_token_ready": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format without \"Bearer \"",
                "name": "Authorization",
                "in": "header"
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
<<<<<<< HEAD
                        "authorizationUrl": "http://localhost:8000/oauth/authorize",
                        "tokenUrl": "http://localhost:8000/oauth/token",
                        "refreshUrl": "http://localhost:8000/token/refresh",
=======
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "user"
        },
        {
<<<<<<< HEAD
            "name": "bouquet",
            "description": "bouquet"
=======
            "name": "book",
            "description": "book"
>>>>>>> 87acb19a53afffe166704ae86ca8b45675712237
        }
    ],
    "security": [
        {
            "passport_token_ready": [],
            "passport": []
        }
    ]
}